.TH "eoVRPInit" 3 "7 Dec 2007" "Version 1.0" "CVRP-TW" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eoVRPInit \- Class defining the initializer functor.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <eoVRPInit.h>\fP
.PP
Inherits \fBeoInit< eoVRP >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBeoVRPInit\fP ()"
.br
.RI "\fIDefault constructor: nothing to do here. \fP"
.ti -1c
.RI "void \fBoperator()\fP (\fBeoVRP\fP &_gen)"
.br
.RI "\fIFunctor member. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBHeuristicInitialization\fP (\fBeoVRP\fP &_gen)"
.br
.RI "\fIHeuristic initializer. \fP"
.ti -1c
.RI "bool \fBcreateNewRoute\fP (std::vector< int > &_unvisited, int &_unvisitedIdx, bool _seedCheckingOverride, Route &_route)"
.br
.RI "\fICreates a new route. \fP"
.ti -1c
.RI "bool \fBselectBestInsertion\fP (std::vector< int > &_unvisited, unsigned _unvisitedIdx, Route &_route, unsigned &_nextClient, Route::iterator &_it)"
.br
.RI "\fISelects the best client and the best position for its insertion in a given route. \fP"
.ti -1c
.RI "bool \fBevaluateInsertion\fP (Route &_route, unsigned _newClient, int _afterClient, double &_cost)"
.br
.RI "\fIEvaluates the feasibility and the cost of inserting a new client in a given subroute. \fP"
.ti -1c
.RI "unsigned \fBselectFarthestClientAsSeed\fP (const std::vector< int > &_unvisited, int _unvisitedIdx)"
.br
.RI "\fISelects the farthest client as seed for a new route. \fP"
.ti -1c
.RI "unsigned \fBselectCheapestClient\fP (const std::vector< int > &_unvisited, int _unvisitedIdx, bool _seedCheckingOverride)"
.br
.RI "\fISelects the cheapest client as seed for a new route. \fP"
.ti -1c
.RI "unsigned \fBselectBestClientAsSeed\fP (const std::vector< int > &_unvisited, int _unvisitedIdx, bool _seedCheckingOverride)"
.br
.RI "\fISelects the best (the 'hardest' one) client as seed for a new route. \fP"
.ti -1c
.RI "void \fBRandomInitializationNoCheck\fP (\fBeoVRP\fP &_gen)"
.br
.RI "\fIRandom initializer. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "unsigned \fBmSeedsUsedCount\fP"
.br
.RI "\fINumber of clients already used as seeds. \fP"
.ti -1c
.RI "std::vector< bool > \fBmSeedsUsed\fP"
.br
.RI "\fIVector storing if a client has been used as a seed or not. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Class defining the initializer functor. 

This class initializes an individual of the VRP problem using an heuristic initializer. 
.PP
Definition at line 65 of file eoVRPInit.h.
.SH "Member Function Documentation"
.PP 
.SS "void eoVRPInit::operator() (\fBeoVRP\fP & _gen)\fC [inline]\fP"
.PP
Functor member. 
.PP
Initializes a genotype using an heuristic initializer. 
.PP
\fBParameters:\fP
.RS 4
\fI_gen\fP Generally a genotype that has been default-constructed. Whatever it contains will be lost. 
.RE
.PP

.PP
Definition at line 99 of file eoVRPInit.h.
.PP
References HeuristicInitialization().
.SS "void eoVRPInit::HeuristicInitialization (\fBeoVRP\fP & _gen)\fC [inline, private]\fP"
.PP
Heuristic initializer. 
.PP
This initializer constructs and individual from routes. Each route is built in a constructive way. The first client of each route is selected trying to maximize a function depending on its time window and how far it is from the depot. We always try to select the hardest clients as seeds. Used seeds are stored so that different seeds are selected for different individuals and thus guarantee the diversity of the initial population. 
.PP
\fBParameters:\fP
.RS 4
\fI_gen\fP The individual to be initialized. 
.RE
.PP

.PP
Definition at line 123 of file eoVRPInit.h.
.PP
References eoVRPUtils::clients, createNewRoute(), and EO< F >::invalidate().
.PP
Referenced by operator()().
.SS "bool eoVRPInit::createNewRoute (std::vector< int > & _unvisited, int & _unvisitedIdx, bool _seedCheckingOverride, Route & _route)\fC [inline, private]\fP"
.PP
Creates a new route. 
.PP
Creates a new route selecting the best (hardest) client as seed and then adding the cheapest clients until one of the constraints (time window or vehicle's capacity) is broken. 
.PP
\fBParameters:\fP
.RS 4
\fI_unvisited\fP Vector of unvisited and thus available clients for constructing the new route. 
.br
\fI_unvisitedIdx\fP Position of the last univisted client in _unvisited vector. 
.br
\fI_seedCheckingOverride\fP If true, it overrides the seed checking mecanism. It must be always false for the first route and then true for the following ones. This way we will preserve diversity in our initial population as every individual will be initialized from a different initial route. 
.br
\fI_route\fP The brand new route we have constructed. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if everything went ok. 
.RE
.PP

.PP
Definition at line 176 of file eoVRPInit.h.
.PP
References mSeedsUsed, mSeedsUsedCount, selectBestClientAsSeed(), and selectBestInsertion().
.PP
Referenced by HeuristicInitialization().
.SS "bool eoVRPInit::selectBestInsertion (std::vector< int > & _unvisited, unsigned _unvisitedIdx, Route & _route, unsigned & _nextClient, Route::iterator & _it)\fC [inline, private]\fP"
.PP
Selects the best client and the best position for its insertion in a given route. 
.PP
Given a subroute, this method tries to find the best client and the best position for it among all the univisited clients. 
.PP
\fBParameters:\fP
.RS 4
\fI_unvisited\fP Vector of unvisited and thus available clients for constructing the new route. 
.br
\fI_unvisitedIdx\fP Position of the last univisted client in _unvisited vector. 
.br
\fI_route\fP The route where we are trying to insert a new client. 
.br
\fI_nextClient\fP A return value. The selected client to be inserted. 
.br
\fI_it\fP A return value. The position for selected client to be inserted. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if a new insertion is possible. False otherwise. 
.RE
.PP

.PP
Definition at line 249 of file eoVRPInit.h.
.PP
References evaluateInsertion().
.PP
Referenced by createNewRoute().
.SS "bool eoVRPInit::evaluateInsertion (Route & _route, unsigned _newClient, int _afterClient, double & _cost)\fC [inline, private]\fP"
.PP
Evaluates the feasibility and the cost of inserting a new client in a given subroute. 
.PP
Given a subroute, this method tries evaluates if it is possible to insert a client in a position. It will return the cost of the resulting route if this insertion is possible. 
.PP
\fBParameters:\fP
.RS 4
\fI_route\fP The route where we are trying to insert a new client. 
.br
\fI_newClient\fP The client we are trying to insert. 
.br
\fI_afterClient\fP The position of insertion. 
.br
\fI_cost\fP A return value. The cost of inserting the given client at the given position. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if the new insertion is possible. False otherwise. 
.RE
.PP

.PP
Definition at line 308 of file eoVRPInit.h.
.PP
References eoVRPUtils::clients, eoVRPUtils::distance(), and eoVRPUtils::getTimeWindow().
.PP
Referenced by selectBestInsertion().
.SS "unsigned eoVRPInit::selectFarthestClientAsSeed (const std::vector< int > & _unvisited, int _unvisitedIdx)\fC [inline, private]\fP"
.PP
Selects the farthest client as seed for a new route. 
.PP
\fBParameters:\fP
.RS 4
\fI_unvisited\fP Vector of unvisited and thus available clients for constructing the new route. 
.br
\fI_unvisitedIdx\fP Position of the last univisted client in _unvisited vector. 
.RE
.PP
\fBReturns:\fP
.RS 4
The position of the client farthest from the depot. 
.RE
.PP

.PP
Definition at line 472 of file eoVRPInit.h.
.PP
References eoVRPUtils::distance().
.SS "unsigned eoVRPInit::selectCheapestClient (const std::vector< int > & _unvisited, int _unvisitedIdx, bool _seedCheckingOverride)\fC [inline, private]\fP"
.PP
Selects the cheapest client as seed for a new route. 
.PP
\fBParameters:\fP
.RS 4
\fI_unvisited\fP Vector of unvisited and thus available clients for constructing the new route. 
.br
\fI_unvisitedIdx\fP Position of the last univisted client in _unvisited vector. 
.br
\fI_seedCheckingOverride\fP If true, it overrides the seed checking mecanism. 
.RE
.PP
\fBReturns:\fP
.RS 4
The position of the cheapest client. 
.RE
.PP

.PP
Definition at line 498 of file eoVRPInit.h.
.PP
References eoVRPUtils::clients, eoVRPUtils::distance(), eoRng::flip(), mSeedsUsed, and eoVRPUtils::polarAngle().
.SS "unsigned eoVRPInit::selectBestClientAsSeed (const std::vector< int > & _unvisited, int _unvisitedIdx, bool _seedCheckingOverride)\fC [inline, private]\fP"
.PP
Selects the best (the 'hardest' one) client as seed for a new route. 
.PP
\fBParameters:\fP
.RS 4
\fI_unvisited\fP Vector of unvisited and thus available clients for constructing the new route. 
.br
\fI_unvisitedIdx\fP Position of the last univisted client in _unvisited vector. 
.br
\fI_seedCheckingOverride\fP If true, it overrides the seed checking mecanism. 
.RE
.PP
\fBReturns:\fP
.RS 4
The position of the best client. 
.RE
.PP

.PP
Definition at line 532 of file eoVRPInit.h.
.PP
References eoVRPUtils::clients, eoVRPUtils::distance(), eoRng::flip(), mSeedsUsed, and eoRng::uniform().
.PP
Referenced by createNewRoute().
.SS "void eoVRPInit::RandomInitializationNoCheck (\fBeoVRP\fP & _gen)\fC [inline, private]\fP"
.PP
Random initializer. 
.PP
Initializes a genotype using a random initializer. 
.PP
\fBParameters:\fP
.RS 4
\fI_gen\fP Generally a genotype that has been default-constructed. Whatever it contains will be lost. 
.RE
.PP

.PP
Definition at line 569 of file eoVRPInit.h.
.PP
References eoVRPUtils::clients, and eoRng::random().

.SH "Author"
.PP 
Generated automatically by Doxygen for CVRP-TW from the source code.
