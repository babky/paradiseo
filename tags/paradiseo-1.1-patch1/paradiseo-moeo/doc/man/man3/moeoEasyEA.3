.TH "moeoEasyEA" 3 "13 Mar 2008" "Version 1.1" "ParadisEO-MOEO-MultiObjectiveEvolvingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moeoEasyEA \- An easy class to design multi-objective evolutionary algorithms.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moeoEasyEA.h>\fP
.PP
Inherits \fBmoeoEA< MOEOT >< MOEOT >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > &_continuator, \fBeoEvalFunc\fP< MOEOT > &_eval, \fBeoBreed\fP< MOEOT > &_breed, \fBmoeoReplacement\fP< MOEOT > &_replace, \fBmoeoFitnessAssignment\fP< MOEOT > &_fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > &_diversityEval, bool _evalFitAndDivBeforeSelection=false)"
.br
.RI "\fICtor taking a breed and merge. \fP"
.ti -1c
.RI "\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > &_continuator, \fBeoPopEvalFunc\fP< MOEOT > &_popEval, \fBeoBreed\fP< MOEOT > &_breed, \fBmoeoReplacement\fP< MOEOT > &_replace, \fBmoeoFitnessAssignment\fP< MOEOT > &_fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > &_diversityEval, bool _evalFitAndDivBeforeSelection=false)"
.br
.RI "\fICtor taking a breed, a merge and a eoPopEval. \fP"
.ti -1c
.RI "\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > &_continuator, \fBeoEvalFunc\fP< MOEOT > &_eval, \fBeoBreed\fP< MOEOT > &_breed, \fBeoMerge\fP< MOEOT > &_merge, \fBeoReduce\fP< MOEOT > &_reduce, \fBmoeoFitnessAssignment\fP< MOEOT > &_fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > &_diversityEval, bool _evalFitAndDivBeforeSelection=false)"
.br
.RI "\fICtor taking a breed, a merge and a reduce. \fP"
.ti -1c
.RI "\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > &_continuator, \fBeoEvalFunc\fP< MOEOT > &_eval, \fBeoSelect\fP< MOEOT > &_select, \fBeoTransform\fP< MOEOT > &_transform, \fBmoeoReplacement\fP< MOEOT > &_replace, \fBmoeoFitnessAssignment\fP< MOEOT > &_fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > &_diversityEval, bool _evalFitAndDivBeforeSelection=false)"
.br
.RI "\fICtor taking a select, a transform and a replacement. \fP"
.ti -1c
.RI "\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > &_continuator, \fBeoEvalFunc\fP< MOEOT > &_eval, \fBeoSelect\fP< MOEOT > &_select, \fBeoTransform\fP< MOEOT > &_transform, \fBeoMerge\fP< MOEOT > &_merge, \fBeoReduce\fP< MOEOT > &_reduce, \fBmoeoFitnessAssignment\fP< MOEOT > &_fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > &_diversityEval, bool _evalFitAndDivBeforeSelection=false)"
.br
.RI "\fICtor taking a select, a transform, a merge and a reduce. \fP"
.ti -1c
.RI "virtual void \fBoperator()\fP (\fBeoPop\fP< MOEOT > &_pop)"
.br
.RI "\fIApplies a few generation of evolution to the population _pop. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBeoContinue\fP< MOEOT > & \fBcontinuator\fP"
.br
.RI "\fIthe stopping criteria \fP"
.ti -1c
.RI "\fBeoEvalFunc\fP< MOEOT > & \fBeval\fP"
.br
.RI "\fIthe evaluation functions \fP"
.ti -1c
.RI "\fBeoPopLoopEval\fP< MOEOT > \fBloopEval\fP"
.br
.RI "\fIto evaluate the whole population \fP"
.ti -1c
.RI "\fBeoPopEvalFunc\fP< MOEOT > & \fBpopEval\fP"
.br
.RI "\fIto evaluate the whole population \fP"
.ti -1c
.RI "\fBeoSelectTransform\fP< MOEOT > \fBselectTransform\fP"
.br
.RI "\fIbreed: a select followed by a transform \fP"
.ti -1c
.RI "\fBeoBreed\fP< MOEOT > & \fBbreed\fP"
.br
.RI "\fIthe breeder \fP"
.ti -1c
.RI "\fBeoMergeReduce\fP< MOEOT > \fBmergeReduce\fP"
.br
.RI "\fIreplacement: a merge followed by a reduce \fP"
.ti -1c
.RI "\fBmoeoReplacement\fP< MOEOT > & \fBreplace\fP"
.br
.RI "\fIthe replacment strategy \fP"
.ti -1c
.RI "\fBmoeoFitnessAssignment\fP< MOEOT > & \fBfitnessEval\fP"
.br
.RI "\fIthe fitness assignment strategy \fP"
.ti -1c
.RI "\fBmoeoDiversityAssignment\fP< MOEOT > & \fBdiversityEval\fP"
.br
.RI "\fIthe diversity assignment strategy \fP"
.ti -1c
.RI "bool \fBevalFitAndDivBeforeSelection\fP"
.br
.RI "\fIif this parameter is set to 'true', the fitness and the diversity of the whole population will be re-evaluated before the selection process \fP"
.ti -1c
.RI "\fBmoeoEasyEA::eoDummyEval\fP \fBdummyEval\fP"
.br
.RI "\fIa dummy eval \fP"
.ti -1c
.RI "\fBmoeoEasyEA::eoDummySelect\fP \fBdummySelect\fP"
.br
.RI "\fIa dummy select \fP"
.ti -1c
.RI "\fBmoeoEasyEA::eoDummyTransform\fP \fBdummyTransform\fP"
.br
.RI "\fIa dummy transform \fP"
.ti -1c
.RI "\fBeoNoElitism\fP< MOEOT > \fBdummyMerge\fP"
.br
.RI "\fIa dummy merge \fP"
.ti -1c
.RI "\fBeoTruncate\fP< MOEOT > \fBdummyReduce\fP"
.br
.RI "\fIa dummy reduce \fP"
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBeoDummyEval\fP"
.br
.RI "\fIa dummy eval \fP"
.ti -1c
.RI "class \fBeoDummySelect\fP"
.br
.RI "\fIa dummy select \fP"
.ti -1c
.RI "class \fBeoDummyTransform\fP"
.br
.RI "\fIa dummy transform \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class MOEOT> class moeoEasyEA< MOEOT >"
An easy class to design multi-objective evolutionary algorithms. 
.PP
Definition at line 58 of file moeoEasyEA.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class MOEOT> \fBmoeoEasyEA\fP< MOEOT >::\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > & _continuator, \fBeoEvalFunc\fP< MOEOT > & _eval, \fBeoBreed\fP< MOEOT > & _breed, \fBmoeoReplacement\fP< MOEOT > & _replace, \fBmoeoFitnessAssignment\fP< MOEOT > & _fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > & _diversityEval, bool _evalFitAndDivBeforeSelection = \fCfalse\fP)\fC [inline]\fP"
.PP
Ctor taking a breed and merge. 
.PP
\fBParameters:\fP
.RS 4
\fI_continuator\fP the stopping criteria 
.br
\fI_eval\fP the evaluation functions 
.br
\fI_breed\fP the breeder 
.br
\fI_replace\fP the replacement strategy 
.br
\fI_fitnessEval\fP the fitness evaluation scheme 
.br
\fI_diversityEval\fP the diversity evaluation scheme 
.br
\fI_evalFitAndDivBeforeSelection\fP put this parameter to 'true' if you want to re-evalue the fitness and the diversity of the population before the selection process 
.RE
.PP

.PP
Definition at line 72 of file moeoEasyEA.h.
.SS "template<class MOEOT> \fBmoeoEasyEA\fP< MOEOT >::\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > & _continuator, \fBeoPopEvalFunc\fP< MOEOT > & _popEval, \fBeoBreed\fP< MOEOT > & _breed, \fBmoeoReplacement\fP< MOEOT > & _replace, \fBmoeoFitnessAssignment\fP< MOEOT > & _fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > & _diversityEval, bool _evalFitAndDivBeforeSelection = \fCfalse\fP)\fC [inline]\fP"
.PP
Ctor taking a breed, a merge and a eoPopEval. 
.PP
\fBParameters:\fP
.RS 4
\fI_continuator\fP the stopping criteria 
.br
\fI_popEval\fP the evaluation functions for the whole population 
.br
\fI_breed\fP the breeder 
.br
\fI_replace\fP the replacement strategy 
.br
\fI_fitnessEval\fP the fitness evaluation scheme 
.br
\fI_diversityEval\fP the diversity evaluation scheme 
.br
\fI_evalFitAndDivBeforeSelection\fP put this parameter to 'true' if you want to re-evalue the fitness and the diversity of the population before the selection process 
.RE
.PP

.PP
Definition at line 90 of file moeoEasyEA.h.
.SS "template<class MOEOT> \fBmoeoEasyEA\fP< MOEOT >::\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > & _continuator, \fBeoEvalFunc\fP< MOEOT > & _eval, \fBeoBreed\fP< MOEOT > & _breed, \fBeoMerge\fP< MOEOT > & _merge, \fBeoReduce\fP< MOEOT > & _reduce, \fBmoeoFitnessAssignment\fP< MOEOT > & _fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > & _diversityEval, bool _evalFitAndDivBeforeSelection = \fCfalse\fP)\fC [inline]\fP"
.PP
Ctor taking a breed, a merge and a reduce. 
.PP
\fBParameters:\fP
.RS 4
\fI_continuator\fP the stopping criteria 
.br
\fI_eval\fP the evaluation functions 
.br
\fI_breed\fP the breeder 
.br
\fI_merge\fP the merge scheme 
.br
\fI_reduce\fP the reduce scheme 
.br
\fI_fitnessEval\fP the fitness evaluation scheme 
.br
\fI_diversityEval\fP the diversity evaluation scheme 
.br
\fI_evalFitAndDivBeforeSelection\fP put this parameter to 'true' if you want to re-evalue the fitness and the diversity of the population before the selection process 
.RE
.PP

.PP
Definition at line 109 of file moeoEasyEA.h.
.SS "template<class MOEOT> \fBmoeoEasyEA\fP< MOEOT >::\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > & _continuator, \fBeoEvalFunc\fP< MOEOT > & _eval, \fBeoSelect\fP< MOEOT > & _select, \fBeoTransform\fP< MOEOT > & _transform, \fBmoeoReplacement\fP< MOEOT > & _replace, \fBmoeoFitnessAssignment\fP< MOEOT > & _fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > & _diversityEval, bool _evalFitAndDivBeforeSelection = \fCfalse\fP)\fC [inline]\fP"
.PP
Ctor taking a select, a transform and a replacement. 
.PP
\fBParameters:\fP
.RS 4
\fI_continuator\fP the stopping criteria 
.br
\fI_eval\fP the evaluation functions 
.br
\fI_select\fP the selection scheme 
.br
\fI_transform\fP the tranformation scheme 
.br
\fI_replace\fP the replacement strategy 
.br
\fI_fitnessEval\fP the fitness evaluation scheme 
.br
\fI_diversityEval\fP the diversity evaluation scheme 
.br
\fI_evalFitAndDivBeforeSelection\fP put this parameter to 'true' if you want to re-evalue the fitness and the diversity of the population before the selection process 
.RE
.PP

.PP
Definition at line 128 of file moeoEasyEA.h.
.SS "template<class MOEOT> \fBmoeoEasyEA\fP< MOEOT >::\fBmoeoEasyEA\fP (\fBeoContinue\fP< MOEOT > & _continuator, \fBeoEvalFunc\fP< MOEOT > & _eval, \fBeoSelect\fP< MOEOT > & _select, \fBeoTransform\fP< MOEOT > & _transform, \fBeoMerge\fP< MOEOT > & _merge, \fBeoReduce\fP< MOEOT > & _reduce, \fBmoeoFitnessAssignment\fP< MOEOT > & _fitnessEval, \fBmoeoDiversityAssignment\fP< MOEOT > & _diversityEval, bool _evalFitAndDivBeforeSelection = \fCfalse\fP)\fC [inline]\fP"
.PP
Ctor taking a select, a transform, a merge and a reduce. 
.PP
\fBParameters:\fP
.RS 4
\fI_continuator\fP the stopping criteria 
.br
\fI_eval\fP the evaluation functions 
.br
\fI_select\fP the selection scheme 
.br
\fI_transform\fP the tranformation scheme 
.br
\fI_merge\fP the merge scheme 
.br
\fI_reduce\fP the reduce scheme 
.br
\fI_fitnessEval\fP the fitness evaluation scheme 
.br
\fI_diversityEval\fP the diversity evaluation scheme 
.br
\fI_evalFitAndDivBeforeSelection\fP put this parameter to 'true' if you want to re-evalue the fitness and the diversity of the population before the selection process 
.RE
.PP

.PP
Definition at line 148 of file moeoEasyEA.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class MOEOT> virtual void \fBmoeoEasyEA\fP< MOEOT >::operator() (\fBeoPop\fP< MOEOT > & _pop)\fC [inline, virtual]\fP"
.PP
Applies a few generation of evolution to the population _pop. 
.PP
\fBParameters:\fP
.RS 4
\fI_pop\fP the population 
.RE
.PP

.PP
Definition at line 160 of file moeoEasyEA.h.
.PP
References moeoEasyEA< MOEOT >::breed, moeoEasyEA< MOEOT >::continuator, moeoEasyEA< MOEOT >::diversityEval, moeoEasyEA< MOEOT >::evalFitAndDivBeforeSelection, moeoEasyEA< MOEOT >::fitnessEval, moeoEasyEA< MOEOT >::popEval, and moeoEasyEA< MOEOT >::replace.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOEO-MultiObjectiveEvolvingObjects from the source code.
