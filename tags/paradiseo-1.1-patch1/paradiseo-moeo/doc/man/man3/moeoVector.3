.TH "moeoVector" 3 "13 Mar 2008" "Version 1.1" "ParadisEO-MOEO-MultiObjectiveEvolvingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moeoVector \- Base class for fixed length chromosomes, just derives from \fBMOEO\fP and std::vector and redirects the smaller than operator to MOEO (objective vector based comparison).  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moeoVector.h>\fP
.PP
Inherits \fBMOEO< MOEOObjectiveVector, MOEOFitness, MOEODiversity >< MOEOObjectiveVector, MOEOFitness, MOEODiversity >\fP.
.PP
Inherited by \fBFlowShop\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef GeneType \fBAtomType\fP"
.br
.RI "\fIthe atomic type \fP"
.ti -1c
.RI "typedef std::vector< GeneType > \fBContainerType\fP"
.br
.RI "\fIthe container type \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoeoVector\fP (unsigned int _size=0, GeneType _value=GeneType())"
.br
.RI "\fIDefault ctor. \fP"
.ti -1c
.RI "void \fBvalue\fP (const std::vector< GeneType > &_v)"
.br
.RI "\fIWe can't have a Ctor from a std::vector as it would create ambiguity with the copy Ctor. \fP"
.ti -1c
.RI "bool \fBoperator<\fP (const \fBmoeoVector\fP< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType > &_moeo) const "
.br
.RI "\fITo avoid conflicts between \fBMOEO::operator<\fP and std::vector<GeneType>::operator<. \fP"
.ti -1c
.RI "virtual void \fBprintOn\fP (std::ostream &_os) const "
.br
.RI "\fIWriting object. \fP"
.ti -1c
.RI "virtual void \fBreadFrom\fP (std::istream &_is)"
.br
.RI "\fIReading object. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class MOEOObjectiveVector, class MOEOFitness, class MOEODiversity, class GeneType> class moeoVector< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType >"
Base class for fixed length chromosomes, just derives from \fBMOEO\fP and std::vector and redirects the smaller than operator to MOEO (objective vector based comparison). 

GeneType must have the following methods: void ctor (needed for the std::vector<>), copy ctor. 
.PP
Definition at line 50 of file moeoVector.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class MOEOObjectiveVector, class MOEOFitness, class MOEODiversity, class GeneType> \fBmoeoVector\fP< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType >::\fBmoeoVector\fP (unsigned int _size = \fC0\fP, GeneType _value = \fCGeneType()\fP)\fC [inline]\fP"
.PP
Default ctor. 
.PP
\fBParameters:\fP
.RS 4
\fI_size\fP Length of vector (default is 0) 
.br
\fI_value\fP Initial value of all elements (default is default value of type GeneType) 
.RE
.PP

.PP
Definition at line 72 of file moeoVector.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class MOEOObjectiveVector, class MOEOFitness, class MOEODiversity, class GeneType> void \fBmoeoVector\fP< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType >::value (const std::vector< GeneType > & _v)\fC [inline]\fP"
.PP
We can't have a Ctor from a std::vector as it would create ambiguity with the copy Ctor. 
.PP
\fBParameters:\fP
.RS 4
\fI_v\fP a vector of GeneType 
.RE
.PP

.PP
Definition at line 81 of file moeoVector.h.
.PP
Referenced by FlowShopOpCrossoverQuad::operator()().
.SS "template<class MOEOObjectiveVector, class MOEOFitness, class MOEODiversity, class GeneType> bool \fBmoeoVector\fP< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType >::operator< (const \fBmoeoVector\fP< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType > & _moeo) const\fC [inline]\fP"
.PP
To avoid conflicts between \fBMOEO::operator<\fP and std::vector<GeneType>::operator<. 
.PP
\fBParameters:\fP
.RS 4
\fI_moeo\fP the object to compare with 
.RE
.PP

.PP
Definition at line 104 of file moeoVector.h.
.SS "template<class MOEOObjectiveVector, class MOEOFitness, class MOEODiversity, class GeneType> virtual void \fBmoeoVector\fP< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType >::printOn (std::ostream & _os) const\fC [inline, virtual]\fP"
.PP
Writing object. 
.PP
\fBParameters:\fP
.RS 4
\fI_os\fP output stream 
.RE
.PP

.PP
Reimplemented from \fBMOEO< MOEOObjectiveVector, MOEOFitness, MOEODiversity >\fP.
.PP
Reimplemented in \fBmoeoBitVector< MOEOObjectiveVector, MOEOFitness, MOEODiversity >\fP.
.PP
Definition at line 114 of file moeoVector.h.
.SS "template<class MOEOObjectiveVector, class MOEOFitness, class MOEODiversity, class GeneType> virtual void \fBmoeoVector\fP< MOEOObjectiveVector, MOEOFitness, MOEODiversity, GeneType >::readFrom (std::istream & _is)\fC [inline, virtual]\fP"
.PP
Reading object. 
.PP
\fBParameters:\fP
.RS 4
\fI_is\fP input stream 
.RE
.PP

.PP
Reimplemented from \fBMOEO< MOEOObjectiveVector, MOEOFitness, MOEODiversity >\fP.
.PP
Reimplemented in \fBmoeoBitVector< MOEOObjectiveVector, MOEOFitness, MOEODiversity >\fP.
.PP
Definition at line 127 of file moeoVector.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOEO-MultiObjectiveEvolvingObjects from the source code.
