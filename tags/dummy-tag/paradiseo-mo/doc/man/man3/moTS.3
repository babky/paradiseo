.TH "moTS" 3 "29 Feb 2008" "Version 1.1" "ParadisEO-MO-MovingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moTS \- Tabu Search (TS).  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moTS.h>\fP
.PP
Inherits \fBmoAlgo< M::EOType >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoTS\fP (\fBmoMoveInit\fP< M > &_move_initializer, \fBmoNextMove\fP< M > &_next_move_generator, \fBmoMoveIncrEval\fP< M > &_incremental_evaluation, \fBmoTabuList\fP< M > &_tabu_list, \fBmoAspirCrit\fP< M > &_aspiration_criterion, \fBmoSolContinue\fP< \fBEOT\fP > &_continue, eoEvalFunc< \fBEOT\fP > &_full_evaluation)"
.br
.RI "\fIConstructor of a \fBmoTS\fP specifying all the boxes. \fP"
.ti -1c
.RI "\fBmoTS\fP (\fBmoMoveExpl\fP< M > &_move_explorer, \fBmoSolContinue\fP< \fBEOT\fP > &_continue, eoEvalFunc< \fBEOT\fP > &_full_evaluation)"
.br
.RI "\fIConstructor with less parameters. \fP"
.ti -1c
.RI "bool \fBoperator()\fP (\fBEOT\fP &_solution)"
.br
.RI "\fIFunction which launchs the Tabu Search. \fP"
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef M::EOType \fBEOT\fP"
.br
.RI "\fIAlias for the type. \fP"
.ti -1c
.RI "typedef EOT::Fitness \fBFitness\fP"
.br
.RI "\fIAlias for the fitness. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBmoMoveExpl\fP< M > & \fBmove_explorer\fP"
.br
.RI "\fINeighborhood explorer. \fP"
.ti -1c
.RI "\fBmoSolContinue\fP< \fBEOT\fP > & \fBcontinu\fP"
.br
.RI "\fIStop criterion. \fP"
.ti -1c
.RI "eoEvalFunc< \fBEOT\fP > & \fBfull_evaluation\fP"
.br
.RI "\fIFull evaluation function. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class M> class moTS< M >"
Tabu Search (TS). 

Generic algorithm that describes a tabu search. 
.PP
Definition at line 50 of file moTS.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class M> \fBmoTS\fP< M >::\fBmoTS\fP (\fBmoMoveInit\fP< M > & _move_initializer, \fBmoNextMove\fP< M > & _next_move_generator, \fBmoMoveIncrEval\fP< M > & _incremental_evaluation, \fBmoTabuList\fP< M > & _tabu_list, \fBmoAspirCrit\fP< M > & _aspiration_criterion, \fBmoSolContinue\fP< \fBEOT\fP > & _continue, eoEvalFunc< \fBEOT\fP > & _full_evaluation)\fC [inline]\fP"
.PP
Constructor of a \fBmoTS\fP specifying all the boxes. 
.PP
In this constructor, a \fBmoTSMoveLoopExpl\fP is instanciated.
.PP
\fBParameters:\fP
.RS 4
\fI_move_initializer\fP The move initializer. 
.br
\fI_next_move_generator\fP The neighbourhood explorer. 
.br
\fI_incremental_evaluation\fP The (generally) efficient evaluation. 
.br
\fI_tabu_list\fP The tabu list. 
.br
\fI_aspiration_criterion\fP An aspiration criterion. 
.br
\fI_continue\fP The stopping criterion. 
.br
\fI_full_evaluation\fP A full evaluation function. 
.RE
.PP

.PP
Definition at line 72 of file moTS.h.
.SS "template<class M> \fBmoTS\fP< M >::\fBmoTS\fP (\fBmoMoveExpl\fP< M > & _move_explorer, \fBmoSolContinue\fP< \fBEOT\fP > & _continue, eoEvalFunc< \fBEOT\fP > & _full_evaluation)\fC [inline]\fP"
.PP
Constructor with less parameters. 
.PP
The explorer is given in the parameters.
.PP
\fBParameters:\fP
.RS 4
\fI_move_explorer\fP The explorer (generally different that a \fBmoTSMoveLoopExpl\fP). 
.br
\fI_continue\fP The stopping criterion. 
.br
\fI_full_evaluation\fP A full evaluation function. 
.RE
.PP

.PP
Definition at line 89 of file moTS.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class M> bool \fBmoTS\fP< M >::operator() (\fBEOT\fP & _solution)\fC [inline]\fP"
.PP
Function which launchs the Tabu Search. 
.PP
Algorithm of the tabu search. As a \fBmoSA\fP or a \fBmoHC\fP, it can be used for HYBRIDATION in an evolutionary algorithm. For security a lock (pthread_mutex_t) is closed during the algorithm.
.PP
\fBParameters:\fP
.RS 4
\fI_solution\fP a solution to improve. 
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE. 
.RE
.PP

.PP
Definition at line 102 of file moTS.h.
.PP
References moTS< M >::continu, moTS< M >::full_evaluation, and moTS< M >::move_explorer.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MO-MovingObjects from the source code.
