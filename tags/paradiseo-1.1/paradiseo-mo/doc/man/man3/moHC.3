.TH "moHC" 3 "13 Mar 2008" "Version 1.1" "ParadisEO-MO-MovingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moHC \- Hill Climbing (HC).  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moHC.h>\fP
.PP
Inherits \fBmoAlgo< M::EOType >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoHC\fP (\fBmoMoveInit\fP< M > &_move_initializer, \fBmoNextMove\fP< M > &_next_move_generator, \fBmoMoveIncrEval\fP< M > &_incremental_evaluation, \fBmoMoveSelect\fP< M > &_move_selection, \fBeoEvalFunc\fP< \fBEOT\fP > &_full_evaluation)"
.br
.RI "\fIFull constructor. \fP"
.ti -1c
.RI "\fBmoHC\fP (\fBmoMoveExpl\fP< M > &_move_explorer, \fBeoEvalFunc\fP< \fBEOT\fP > &_full_evaluation)"
.br
.RI "\fILight constructor. \fP"
.ti -1c
.RI "\fB~moHC\fP ()"
.br
.RI "\fIDestructor. \fP"
.ti -1c
.RI "bool \fBoperator()\fP (\fBEOT\fP &_solution)"
.br
.RI "\fI\fBFunction\fP which launches the HC. \fP"
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef M::EOType \fBEOT\fP"
.br
.RI "\fIAlias for the type. \fP"
.ti -1c
.RI "typedef EOT::Fitness \fBFitness\fP"
.br
.RI "\fIAlias for the fitness. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBmoMoveExpl\fP< M > * \fBmove_explorer\fP"
.br
.RI "\fIComplete exploration of the neighborhood. \fP"
.ti -1c
.RI "\fBeoEvalFunc\fP< \fBEOT\fP > & \fBfull_evaluation\fP"
.br
.RI "\fIA full evaluation function. \fP"
.ti -1c
.RI "bool \fBmove_explorer_memory_allocation\fP"
.br
.RI "\fIIndicate if the memory has been allocated for the move_explorer. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class M> class moHC< M >"
Hill Climbing (HC). 

Class which describes the algorithm for a hill climbing. 
.PP
Definition at line 49 of file moHC.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class M> \fBmoHC\fP< M >::\fBmoHC\fP (\fBmoMoveInit\fP< M > & _move_initializer, \fBmoNextMove\fP< M > & _next_move_generator, \fBmoMoveIncrEval\fP< M > & _incremental_evaluation, \fBmoMoveSelect\fP< M > & _move_selection, \fBeoEvalFunc\fP< \fBEOT\fP > & _full_evaluation)\fC [inline]\fP"
.PP
Full constructor. 
.PP
All the boxes are given in order the HC to use a \fBmoHCMoveLoopExpl\fP.
.PP
\fBParameters:\fP
.RS 4
\fI_move_initializer\fP a move initialiser. 
.br
\fI_next_move_generator\fP a neighborhood explorer. 
.br
\fI_incremental_evaluation\fP a (generally) efficient evaluation function. 
.br
\fI_move_selection\fP a move selector. 
.br
\fI_full_evaluation\fP a full evaluation function. 
.RE
.PP

.PP
Definition at line 69 of file moHC.h.
.SS "template<class M> \fBmoHC\fP< M >::\fBmoHC\fP (\fBmoMoveExpl\fP< M > & _move_explorer, \fBeoEvalFunc\fP< \fBEOT\fP > & _full_evaluation)\fC [inline]\fP"
.PP
Light constructor. 
.PP
This constructor allow to use another \fBmoMoveExpl\fP (generally not a \fBmoHCMoveLoopExpl\fP).
.PP
\fBParameters:\fP
.RS 4
\fI_move_explorer\fP a complete explorer. 
.br
\fI_full_evaluation\fP a full evaluation function. 
.RE
.PP

.PP
Definition at line 82 of file moHC.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class M> bool \fBmoHC\fP< M >::operator() (\fBEOT\fP & _solution)\fC [inline, virtual]\fP"
.PP
\fBFunction\fP which launches the HC. 
.PP
The HC has to improve a current solution. As the \fBmoSA\fP and the mo TS, it can be used for HYBRIDATION in an evolutionnary algorithm.
.PP
\fBParameters:\fP
.RS 4
\fI_solution\fP a current solution to improve. 
.RE
.PP
\fBReturns:\fP
.RS 4
true. 
.RE
.PP

.PP
Implements \fBeoUF< M::EOType &, bool >\fP.
.PP
Definition at line 103 of file moHC.h.
.PP
References moHC< M >::full_evaluation.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MO-MovingObjects from the source code.
