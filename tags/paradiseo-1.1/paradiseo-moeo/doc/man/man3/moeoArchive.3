.TH "moeoArchive" 3 "13 Mar 2008" "Version 1.1" "ParadisEO-MOEO-MultiObjectiveEvolvingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moeoArchive \- An archive is a secondary population that stores non-dominated solutions.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moeoArchive.h>\fP
.PP
Inherits \fBeoPop< MOEOT >\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef MOEOT::ObjectiveVector \fBObjectiveVector\fP"
.br
.RI "\fIThe type of an objective vector for a solution. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoeoArchive\fP ()"
.br
.RI "\fIDefault ctor. \fP"
.ti -1c
.RI "\fBmoeoArchive\fP (\fBmoeoObjectiveVectorComparator\fP< \fBObjectiveVector\fP > &_comparator)"
.br
.RI "\fICtor. \fP"
.ti -1c
.RI "bool \fBdominates\fP (const \fBObjectiveVector\fP &_objectiveVector) const "
.br
.RI "\fIReturns true if the current archive dominates _objectiveVector according to the \fBmoeoObjectiveVectorComparator\fP given in the constructor. \fP"
.ti -1c
.RI "bool \fBcontains\fP (const \fBObjectiveVector\fP &_objectiveVector) const "
.br
.RI "\fIReturns true if the current archive already contains a solution with the same objective values than _objectiveVector. \fP"
.ti -1c
.RI "void \fBupdate\fP (const MOEOT &_moeo)"
.br
.RI "\fIUpdates the archive with a given individual _moeo. \fP"
.ti -1c
.RI "void \fBupdate\fP (const \fBeoPop\fP< MOEOT > &_pop)"
.br
.RI "\fIUpdates the archive with a given population _pop. \fP"
.ti -1c
.RI "bool \fBequals\fP (const \fBmoeoArchive\fP< MOEOT > &_arch)"
.br
.RI "\fIReturns true if the current archive contains the same objective vectors than the given archive _arch. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBmoeoObjectiveVectorComparator\fP< \fBObjectiveVector\fP > & \fBcomparator\fP"
.br
.RI "\fIThe \fBmoeoObjectiveVectorComparator\fP used to compare solutions. \fP"
.ti -1c
.RI "\fBmoeoParetoObjectiveVectorComparator\fP< \fBObjectiveVector\fP > \fBparetoComparator\fP"
.br
.RI "\fIA \fBmoeoObjectiveVectorComparator\fP based on Pareto dominance (used as default). \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class MOEOT> class moeoArchive< MOEOT >"
An archive is a secondary population that stores non-dominated solutions. 
.PP
Definition at line 49 of file moeoArchive.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class MOEOT> \fBmoeoArchive\fP< MOEOT >::\fBmoeoArchive\fP ()\fC [inline]\fP"
.PP
Default ctor. 
.PP
The \fBmoeoObjectiveVectorComparator\fP used to compare solutions is based on Pareto dominance 
.PP
Definition at line 70 of file moeoArchive.h.
.SS "template<class MOEOT> \fBmoeoArchive\fP< MOEOT >::\fBmoeoArchive\fP (\fBmoeoObjectiveVectorComparator\fP< \fBObjectiveVector\fP > & _comparator)\fC [inline]\fP"
.PP
Ctor. 
.PP
\fBParameters:\fP
.RS 4
\fI_comparator\fP the \fBmoeoObjectiveVectorComparator\fP used to compare solutions 
.RE
.PP

.PP
Definition at line 78 of file moeoArchive.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class MOEOT> bool \fBmoeoArchive\fP< MOEOT >::dominates (const \fBObjectiveVector\fP & _objectiveVector) const\fC [inline]\fP"
.PP
Returns true if the current archive dominates _objectiveVector according to the \fBmoeoObjectiveVectorComparator\fP given in the constructor. 
.PP
\fBParameters:\fP
.RS 4
\fI_objectiveVector\fP the objective vector to compare with the current archive 
.RE
.PP

.PP
Definition at line 86 of file moeoArchive.h.
.PP
References moeoArchive< MOEOT >::comparator.
.SS "template<class MOEOT> bool \fBmoeoArchive\fP< MOEOT >::contains (const \fBObjectiveVector\fP & _objectiveVector) const\fC [inline]\fP"
.PP
Returns true if the current archive already contains a solution with the same objective values than _objectiveVector. 
.PP
\fBParameters:\fP
.RS 4
\fI_objectiveVector\fP the objective vector to compare with the current archive 
.RE
.PP

.PP
Definition at line 104 of file moeoArchive.h.
.PP
Referenced by moeoArchive< MOEOT >::equals().
.SS "template<class MOEOT> void \fBmoeoArchive\fP< MOEOT >::update (const MOEOT & _moeo)\fC [inline]\fP"
.PP
Updates the archive with a given individual _moeo. 
.PP
\fBParameters:\fP
.RS 4
\fI_moeo\fP the given individual 
.RE
.PP

.PP
Definition at line 121 of file moeoArchive.h.
.PP
References moeoArchive< MOEOT >::comparator.
.PP
Referenced by moeoArchive< MOEOT >::update().
.SS "template<class MOEOT> void \fBmoeoArchive\fP< MOEOT >::update (const \fBeoPop\fP< MOEOT > & _pop)\fC [inline]\fP"
.PP
Updates the archive with a given population _pop. 
.PP
\fBParameters:\fP
.RS 4
\fI_pop\fP the given population 
.RE
.PP

.PP
Definition at line 164 of file moeoArchive.h.
.PP
References moeoArchive< MOEOT >::update().
.SS "template<class MOEOT> bool \fBmoeoArchive\fP< MOEOT >::equals (const \fBmoeoArchive\fP< MOEOT > & _arch)\fC [inline]\fP"
.PP
Returns true if the current archive contains the same objective vectors than the given archive _arch. 
.PP
\fBParameters:\fP
.RS 4
\fI_arch\fP the given archive 
.RE
.PP

.PP
Definition at line 177 of file moeoArchive.h.
.PP
References moeoArchive< MOEOT >::contains().

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOEO-MultiObjectiveEvolvingObjects from the source code.
