.TH "moeoNormalizedSolutionVsSolutionBinaryMetric" 3 "13 Mar 2008" "Version 1.1" "ParadisEO-MOEO-MultiObjectiveEvolvingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moeoNormalizedSolutionVsSolutionBinaryMetric \- Base class for binary metrics dedicated to the performance comparison between two solutions's objective vectors using normalized values.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moeoNormalizedSolutionVsSolutionBinaryMetric.h>\fP
.PP
Inherits \fBmoeoSolutionVsSolutionBinaryMetric< ObjectiveVector, R >< moeoRealObjectiveVector< ObjectiveVectorTraits >, R >\fP.
.PP
Inherited by \fBmoeoAdditiveEpsilonBinaryMetric< ObjectiveVector >\fP, and \fBmoeoHypervolumeBinaryMetric< ObjectiveVector >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoeoNormalizedSolutionVsSolutionBinaryMetric\fP ()"
.br
.RI "\fIDefault ctr for any \fBmoeoNormalizedSolutionVsSolutionBinaryMetric\fP object. \fP"
.ti -1c
.RI "void \fBsetup\fP (double _min, double _max, unsigned int _obj)"
.br
.RI "\fISets the lower bound (_min) and the upper bound (_max) for the objective _obj. \fP"
.ti -1c
.RI "virtual void \fBsetup\fP (\fBeoRealInterval\fP _realInterval, unsigned int _obj)"
.br
.RI "\fISets the lower bound and the upper bound for the objective _obj using a \fBeoRealInterval\fP object. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static double \fBtiny\fP ()"
.br
.RI "\fIReturns a very small value that can be used to avoid extreme cases (where the min bound == the max bound). \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBeoRealInterval\fP > \fBbounds\fP"
.br
.RI "\fIthe bounds for every objective (bounds[i] = bounds for the objective i) \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class ObjectiveVector, class R> class moeoNormalizedSolutionVsSolutionBinaryMetric< ObjectiveVector, R >"
Base class for binary metrics dedicated to the performance comparison between two solutions's objective vectors using normalized values. 

Then, indicator values lie in the interval [-1,1]. Note that you have to set the bounds for every objective before using the operator(). 
.PP
Definition at line 51 of file moeoNormalizedSolutionVsSolutionBinaryMetric.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class ObjectiveVector, class R> void \fBmoeoNormalizedSolutionVsSolutionBinaryMetric\fP< \fBObjectiveVector\fP, R >::setup (double _min, double _max, unsigned int _obj)\fC [inline]\fP"
.PP
Sets the lower bound (_min) and the upper bound (_max) for the objective _obj. 
.PP
\fBParameters:\fP
.RS 4
\fI_min\fP lower bound 
.br
\fI_max\fP upper bound 
.br
\fI_obj\fP the objective index 
.RE
.PP

.PP
Definition at line 75 of file moeoNormalizedSolutionVsSolutionBinaryMetric.h.
.SS "template<class ObjectiveVector, class R> virtual void \fBmoeoNormalizedSolutionVsSolutionBinaryMetric\fP< \fBObjectiveVector\fP, R >::setup (\fBeoRealInterval\fP _realInterval, unsigned int _obj)\fC [inline, virtual]\fP"
.PP
Sets the lower bound and the upper bound for the objective _obj using a \fBeoRealInterval\fP object. 
.PP
\fBParameters:\fP
.RS 4
\fI_realInterval\fP the \fBeoRealInterval\fP object 
.br
\fI_obj\fP the objective index 
.RE
.PP

.PP
Definition at line 91 of file moeoNormalizedSolutionVsSolutionBinaryMetric.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOEO-MultiObjectiveEvolvingObjects from the source code.
